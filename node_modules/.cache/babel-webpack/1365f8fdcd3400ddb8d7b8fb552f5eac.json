{"ast":null,"code":"import { GenreComponent } from '../genre/genre.component';\nimport { DirectorComponent } from '../director/director.component';\nimport { SynopsisComponent } from '../synopsis/synopsis.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"../nav-bar/nav-bar.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/icon\";\n\nfunction MovieCardComponent_mat_card_2_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"favorite\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MovieCardComponent_mat_card_2_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \"favorite_border\");\n  }\n}\n\nfunction MovieCardComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 2);\n    i0.ɵɵelementStart(1, \"mat-card-header\", 3);\n    i0.ɵɵelementStart(2, \"mat-card-title\", 4);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-card-subtitle\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 6);\n    i0.ɵɵelement(7, \"img\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-card-actions\");\n    i0.ɵɵelementStart(9, \"div\", 8);\n    i0.ɵɵelementStart(10, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.showGenre(movie_r1.Genre.Name, movie_r1.Genre.Description);\n    });\n    i0.ɵɵtext(11, \" Genre \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.showDirector(movie_r1.Director.Name, movie_r1.Director.Bio, movie_r1.Director.Birth, movie_r1.Director.Death);\n    });\n    i0.ɵɵtext(13, \" Director \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.showSynopsis(movie_r1.Title, movie_r1.Description, movie_r1.Director.Name, movie_r1.Genre.Name, movie_r1.ReleaseYear, movie_r1.ImdbRating, movie_r1.Actors);\n    });\n    i0.ɵɵtext(15, \" Synopsis \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function MovieCardComponent_mat_card_2_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const movie_r1 = restoredCtx.$implicit;\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.onToggleFavoriteMovie(movie_r1._id);\n    });\n    i0.ɵɵelementStart(17, \"mat-icon\");\n    i0.ɵɵtemplate(18, MovieCardComponent_mat_card_2_span_18_Template, 2, 0, \"span\", 11);\n    i0.ɵɵtemplate(19, MovieCardComponent_mat_card_2_ng_template_19_Template, 1, 0, \"ng-template\", null, 12, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const movie_r1 = ctx.$implicit;\n\n    const _r3 = i0.ɵɵreference(20);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(movie_r1.Title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Directed by: \", movie_r1.Director.Name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"src\", movie_r1.ImagePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", movie_r1.Title);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isFavorite(movie_r1._id))(\"ngIfElse\", _r3);\n  }\n}\n\nexport let MovieCardComponent = /*#__PURE__*/(() => {\n  class MovieCardComponent {\n    constructor(fetchApiData, dialog, snackBar) {\n      this.fetchApiData = fetchApiData;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.movies = [];\n      this.favoriteMovieIds = [];\n    }\n\n    getMovies() {\n      this.fetchApiData.getAllMovies().subscribe(resp => {\n        this.movies = resp;\n        return this.movies;\n      });\n    }\n\n    getFavoriteMovies() {\n      this.fetchApiData.getUser().subscribe(response => {\n        this.favoriteMovieIds = response.FavoriteMovies;\n        return this.favoriteMovieIds;\n      });\n    }\n\n    ngOnInit() {\n      this.getMovies();\n      this.getFavoriteMovies();\n    }\n\n    showGenre(name, description) {\n      this.dialog.open(GenreComponent, {\n        data: {\n          name,\n          description\n        }\n      });\n    }\n\n    showDirector(name, bio, birth, death) {\n      this.dialog.open(DirectorComponent, {\n        data: {\n          name,\n          bio,\n          birth,\n          death\n        }\n      });\n    }\n\n    showSynopsis(title, description, director, genre, releaseYear, imdbRating, actors) {\n      this.dialog.open(SynopsisComponent, {\n        data: {\n          title,\n          description,\n          director,\n          genre,\n          releaseYear,\n          imdbRating,\n          actors\n        }\n      });\n    }\n\n    isFavorite(movieID) {\n      const favmovie = this.favoriteMovieIds.includes(movieID);\n      return favmovie;\n    }\n\n    onToggleFavoriteMovie(id) {\n      if (this.isFavorite(id)) {\n        this.fetchApiData.deleteMovie(id).subscribe(response => {\n          this.snackBar.open('Removed from favorites!', 'OK', {\n            duration: 2000\n          });\n        });\n        const index = this.favoriteMovieIds.indexOf(id);\n        return this.favoriteMovieIds.splice(index, 1);\n      } else {\n        this.fetchApiData.addFavoriteMovie(id).subscribe(response => {\n          this.snackBar.open('Added to favorites!', 'OK', {\n            duration: 2000\n          });\n        });\n      }\n\n      return this.favoriteMovieIds.push(id);\n    }\n\n  }\n\n  MovieCardComponent.ɵfac = function MovieCardComponent_Factory(t) {\n    return new (t || MovieCardComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n\n  MovieCardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MovieCardComponent,\n    selectors: [[\"app-movie-card\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"container\"], [\"class\", \"card-container\", \"style\", \"flex: 1 1 auto;\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-container\", 2, \"flex\", \"1 1 auto\"], [1, \"center\"], [1, \"title\"], [1, \"director\"], [1, \"images\"], [3, \"src\", \"alt\"], [1, \"links\"], [\"mat-button\", \"\", \"color\", \"primary\", 1, \"action\", \"fw-light\", 3, \"click\"], [\"mat-icon-button\", \"\", \"color\", \"warn\", \"aria-label\", \"Add movie to favorites\", 1, \"favorite-button\", 3, \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"]],\n    template: function MovieCardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-bar\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵtemplate(2, MovieCardComponent_mat_card_2_Template, 21, 6, \"mat-card\", 1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.movies);\n      }\n    },\n    directives: [i4.NavBarComponent, i5.NgForOf, i6.MatCard, i6.MatCardHeader, i6.MatCardTitle, i6.MatCardSubtitle, i6.MatCardActions, i7.MatButton, i8.MatIcon, i5.NgIf],\n    styles: [\".container[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fill,minmax(300px,1fr));grid-gap:2vw;gap:2vw;margin:30px auto;max-width:1200px;grid-auto-rows:600px}.center[_ngcontent-%COMP%]{justify-content:center;text-align:center}.title[_ngcontent-%COMP%]{font-size:1.5em;line-height:1.5em}.card-container[_ngcontent-%COMP%]{padding:30px;display:flex;flex-direction:column;justify-content:space-between;align-items:center;background-color:#000;box-shadow:2px 2px 3px 2px #c4c1c1;border-radius:10px;color:#fff}img[_ngcontent-%COMP%]{width:200px;height:auto;max-height:350px}.director[_ngcontent-%COMP%]{color:#fff}.links[_ngcontent-%COMP%]{display:flex}.favorite-button[_ngcontent-%COMP%]{transform:scale(1.2)}button[_ngcontent-%COMP%]{font-size:1.2em;font-weight:500}button[_ngcontent-%COMP%]:hover{color:#cabfbf}\"]\n  });\n  return MovieCardComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}