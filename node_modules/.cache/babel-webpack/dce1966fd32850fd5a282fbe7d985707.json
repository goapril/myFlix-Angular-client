{"ast":null,"code":"import { ProfileUpdateComponent } from '../profile-update/profile-update.component';\nimport { ProfileDeleteComponent } from '../profile-delete/profile-delete.component';\nimport { GenreComponent } from '../genre/genre.component';\nimport { DirectorComponent } from '../director/director.component';\nimport { SynopsisComponent } from '../synopsis/synopsis.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../fetch-api-data.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/material/snack-bar\";\nimport * as i4 from \"../nav-bar/nav-bar.component\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/common\";\n\nfunction UserProfileComponent_mat_card_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 10);\n    i0.ɵɵelementStart(1, \"mat-card-header\", 11);\n    i0.ɵɵelementStart(2, \"mat-card-title\", 12);\n    i0.ɵɵelementStart(3, \"span\", 13);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-card-subtitle\", 14);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"img\", 15);\n    i0.ɵɵelementStart(8, \"mat-card-actions\", 16);\n    i0.ɵɵelementStart(9, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_mat_card_25_Template_button_click_9_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const favorite_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.showGenre(favorite_r1.Genre.Name, favorite_r1.Genre.Description);\n    });\n    i0.ɵɵtext(10, \" Genre \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_mat_card_25_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const favorite_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.showDirector(favorite_r1.Director.Name, favorite_r1.Director.Bio, favorite_r1.Director.Birth, favorite_r1.Director.Death);\n    });\n    i0.ɵɵtext(12, \" Director \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_mat_card_25_Template_button_click_13_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const favorite_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.showSynopsis(favorite_r1.Title, favorite_r1.Description, favorite_r1.Director.Name, favorite_r1.Genre.Name, favorite_r1.ReleaseYear, favorite_r1.ImdbRating, favorite_r1.Actors);\n    });\n    i0.ɵɵtext(14, \" Synopsis \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"br\");\n    i0.ɵɵelement(16, \"br\");\n    i0.ɵɵelementStart(17, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function UserProfileComponent_mat_card_25_Template_button_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const favorite_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.deleteMovie(favorite_r1._id, favorite_r1.Title);\n    });\n    i0.ɵɵtext(18, \" Delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const favorite_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(favorite_r1.Title);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Directed by: \", favorite_r1.Director.Name, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", favorite_r1.ImagePath, i0.ɵɵsanitizeUrl);\n    i0.ɵɵpropertyInterpolate(\"alt\", favorite_r1.Title);\n  }\n}\n\nexport let UserProfileComponent = /*#__PURE__*/(() => {\n  class UserProfileComponent {\n    constructor(fetchApiData, dialog, snackBar) {\n      this.fetchApiData = fetchApiData;\n      this.dialog = dialog;\n      this.snackBar = snackBar;\n      this.userData = {\n        Username: '',\n        Password: '',\n        Email: '',\n        Birthday: ''\n      };\n      this.user = [];\n      this.movies = [];\n      this.favorites = [];\n    }\n\n    ngOnInit() {\n      this.getUser();\n    }\n\n    getUser() {\n      this.fetchApiData.getUser().subscribe(resp => {\n        this.user = resp;\n        this.getMovies();\n        console.log(this.user);\n      });\n    }\n\n    getMovies() {\n      this.fetchApiData.getAllMovies().subscribe(resp => {\n        this.movies = resp;\n        this.filterFavorites();\n        console.log(this.user);\n      });\n    }\n    /*filterFavorites(): void {\n      this.favorites = this.movies.filter((movie: any) =>\n        this.user.FavoriteMovies.includes(movie._id)\n      );\n      console.log(this.user.FavoriteMovies);\n      return this.favorites;\n    }*/\n\n\n    filterFavorites() {\n      this.movies.forEach(movie => {\n        if (this.user.FavoriteMovies.includes(movie._id)) {\n          this.favorites.push(movie);\n        }\n      });\n      return this.favorites;\n    }\n\n    deleteMovie(id, title) {\n      this.fetchApiData.deleteMovie(id).subscribe(resp => {\n        this.snackBar.open(`${title} has been removed from your favorites!`, 'OK', {\n          duration: 2000\n        });\n        setTimeout(function () {\n          window.location.reload();\n        }, 2000);\n      });\n    }\n\n    editUser() {\n      const dialogRef = this.dialog.open(ProfileUpdateComponent, {\n        width: '280px'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        this.getUser();\n      });\n    }\n\n    deleteUser() {\n      this.dialog.open(ProfileDeleteComponent, {\n        width: '280px'\n      });\n    }\n\n    showGenre(name, description) {\n      this.dialog.open(GenreComponent, {\n        data: {\n          name,\n          description\n        }\n      });\n    }\n\n    showDirector(name, bio, birth, death) {\n      this.dialog.open(DirectorComponent, {\n        data: {\n          name,\n          bio,\n          birth,\n          death\n        }\n      });\n    }\n\n    showSynopsis(title, description, director, genre, releaseYear, imdbRating, actors) {\n      this.dialog.open(SynopsisComponent, {\n        data: {\n          title,\n          description,\n          director,\n          genre,\n          releaseYear,\n          imdbRating,\n          actors\n        }\n      });\n    }\n\n  }\n\n  UserProfileComponent.ɵfac = function UserProfileComponent_Factory(t) {\n    return new (t || UserProfileComponent)(i0.ɵɵdirectiveInject(i1.FetchApiDataService), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.MatSnackBar));\n  };\n\n  UserProfileComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserProfileComponent,\n    selectors: [[\"app-user-profile\"]],\n    inputs: {\n      userData: \"userData\"\n    },\n    decls: 26,\n    vars: 8,\n    consts: [[1, \"container\"], [1, \"profile-container\"], [1, \"header-title\"], [1, \"box1\"], [1, \"update-delete\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 3, \"click\"], [1, \"favorite-container\"], [1, \"card-container\"], [\"class\", \"card\", \"style\", \"flex: 1 1 auto;\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", 2, \"flex\", \"1 1 auto\"], [1, \"card-header\"], [1, \"card-title\"], [1, \"title\"], [1, \"director\"], [3, \"src\", \"alt\"], [1, \"card-actions\"], [\"mat-button\", \"\", \"color\", \"primary\", 1, \"action\", \"fw-light\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"warn\", 1, \"warning\", 3, \"click\"]],\n    template: function UserProfileComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-bar\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"h1\", 2);\n        i0.ɵɵtext(4, \"Profile Data\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"h3\");\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"h3\");\n        i0.ɵɵtext(9, \"Password: ********\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"h3\");\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"h3\");\n        i0.ɵɵtext(13);\n        i0.ɵɵpipe(14, \"date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"mat-card-actions\", 4);\n        i0.ɵɵelementStart(16, \"div\");\n        i0.ɵɵelementStart(17, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function UserProfileComponent_Template_button_click_17_listener() {\n          return ctx.editUser();\n        });\n        i0.ɵɵtext(18, \" Update \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function UserProfileComponent_Template_button_click_19_listener() {\n          return ctx.deleteUser();\n        });\n        i0.ɵɵtext(20, \" Delete \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 7);\n        i0.ɵɵelementStart(22, \"h1\", 2);\n        i0.ɵɵtext(23, \"Favorite Movie List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 8);\n        i0.ɵɵtemplate(25, UserProfileComponent_mat_card_25_Template, 19, 4, \"mat-card\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"Username: \", ctx.user.Username, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\"Email: \", ctx.user.Email, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Birthday: \", i0.ɵɵpipeBind3(14, 4, ctx.user.Birthday, \"MM/dd/yyyy\", \"UTC\"), \"\");\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.favorites);\n      }\n    },\n    directives: [i4.NavBarComponent, i5.MatCardActions, i6.MatButton, i7.NgForOf, i5.MatCard, i5.MatCardHeader, i5.MatCardTitle, i5.MatCardSubtitle],\n    pipes: [i7.DatePipe],\n    styles: [\".favorite-container[_ngcontent-%COMP%], .profile-container[_ngcontent-%COMP%]{background-color:#000;color:#fff;padding:10px 20px;margin:20px auto;max-width:1300px}.card-container[_ngcontent-%COMP%], .favorite-container[_ngcontent-%COMP%], .profile-container[_ngcontent-%COMP%]{grid-template-columns:repeat(auto-fill,minmax(300px,1fr))}.card-container[_ngcontent-%COMP%]{display:grid;margin-top:10px;grid-gap:20px;gap:20px}.card[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:space-between;align-items:center;background-color:#000;box-shadow:2px 2px 3px 2px #c4c1c1;border-radius:10px;color:#fff}.header-title[_ngcontent-%COMP%]{justify-content:center;text-align:center;margin-top:20px}.update-delete[_ngcontent-%COMP%], h3[_ngcontent-%COMP%]{margin-left:20px}button[_ngcontent-%COMP%]{font-size:1em;font-weight:500;margin-left:0;margin-right:0}button[_ngcontent-%COMP%]:hover{color:#cabfbf}.title[_ngcontent-%COMP%]{font-size:1em;line-height:1em}.director[_ngcontent-%COMP%]{color:#fff}.card-header[_ngcontent-%COMP%]{justify-content:center;text-align:center}img[_ngcontent-%COMP%]{width:200px;height:auto;max-height:350px}\"]\n  });\n  return UserProfileComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}